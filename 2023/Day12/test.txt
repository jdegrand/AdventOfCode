Random Notes
_1 * ((_2 / _1) ** 4)

Just need first two iteratioms
a[0] * ((a[1] / a[0]) ** 4)

Trying to see other patterns
???.###????.###                         =>  1,   1     1,1,3 - 1 arrangement
.??..??...?##.?.??..??...?##.           =>  4,  32     1,1,3 - 16384 arrangements
?#?#?#?#?#?#?#???#?#?#?#?#?#?#?         =>  1,   1     1,3,1,6 - 1 arrangement
????.#...#...?????.#...#...             =>  1,   2     4,1,1 - 16 arrangements
????.######..#####.?????.######..#####. =>  4,  20     1,6,5 - 2500 arrangements
?###??????????###????????               => 10, 150     3,2,1 - 506250 arrangements

For block
len = block.length

if block.length

.?. and starts = * 8

????.#...#...?????.#...#...             => 1      4,1,1 - 16 arrangements
????.######..#####.?????.######..#####. => 1      1,6,5 - 2500 arrangements

if beginning is ?.
    number is perms1 * 2
end

elsif

1 + (size_block - first) if size_block >= first
if block connecting first num / size

[1, 2]
[4, 20]

[4, 1, 1, 5, 1, 1]

[[1, 1], [4, 32], [1, 1], [1, 2], [4, 20], [10, 150]]

????#?#???.??.. 9,2

.??..??...?##. 1,1,3
[2, 2, 3]

.??..??...?##.?.??..??...?##. 1,1,3,1,1,3
[2, 2, 3, 1, 2, 2, 3]

stack = 1,1,3,1,1,3
n = [2, 2, 3, 1, 2, 2, 3]
iterate through and pop if n <= front_stack = 1